from enum import Enum


class ServiceError(Enum):
    FLOW_NAME_DUPLICATE = "SE60001"
    FLOW_USER_DUPLICATE = "SE60002"
    FLOW_USER_IS_EMPTY = "SE60003"
    ACCIDENT_NOT_FOUND = "SE60004"
    INCIDENT_NOT_FOUND = "SE60005"
    DOWNLOAD_FILE_NOT_FOUND = "SE60007"
    RECIPIENTS_ID_EMPTY = "SE60008"
    REPORT_NOT_FOUND = "SE60009"
    USERNAME_EXIST = "SE60010"
    OTX_TOKEN_NOT_FOUND = "SE60011"
    OTX_PULSE_CREATE_ERROR = "SE60012"
    OTX_TOKEN_INVALIDATE = "SE60013"
    OTX_PULSE_DELETE_ERROR = "SE60014"
    ROLE_IN_USED = "SE60015"
    METHOD_NOT_ALLOW = "SE60016"
    DEVICE_EXIST_IN_SENSOR = "SE60017"
    COMPANY_TAX_ID_DUPLICATE = "SE60018"
    COMPANY_NOT_EXIST = "SE60019"
    SENSOR_NOT_EXIST = "SE60020"
    GROUP_NOT_EXIST = "SE60021"
    ROLE_NOT_EXIST = "SE60022"
    API_TOKEN_NOT_EXIST = "SE60023"
    DEVICE_EXIST = "SE60024"
    SENSOR_IP_DUPLICATE = "SE60025"
    DEVICE_NOT_EXIST = "SE60026"
    COMPANY_HAS_BEEN_REVOKE = "SE60027"
    USER_NOT_FOUND = "SE60028"
    SENSOR_UID_REQUIRED = "SE60029"
    LM_IP_NOT_EXIST = "SE60030"
    LM_TOKEN_NOT_EXIST = "SE60031"
    LM_TOKEN_ERROR = "SE60032"
    DATA_NOT_FOUND = "SE690001"
    NAME_DUPLICATE = "SE690002"
    CREATE_ERROR = "SE690003"
    UPDATE_ERROR = "SE690004"
    DELETE_ERROR = "SE690005"

    @classmethod
    def has_value(cls, value):
        return value in cls._value2member_map_

    @classmethod
    def has_key(cls, key):
        return key in cls._member_names_
