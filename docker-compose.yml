version: "3"
services:
  mssp-database:
    image: mariadb:10.8
    restart: always  
    networks: 
      - mssp-net
    environment:
      MARIADB_USER: user
      MARIADB_PASSWORD: test123
      MARIADB_ROOT_PASSWORD: test123
    ports:
      - "5005:3306"
    volumes:
      - ./mssp-deploy/initsql:/docker-entrypoint-initdb.d
      - ./database:/var/lib/mysql

  nginx:
    image: nginx:1.21.6
    container_name: nginx
    restart: always
    environment:
      - NGINX_API_HOST=mssp
    ports:
      - "8084:80"
      - "443:443"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - mssp-net
    volumes:
      - ./log/nginx:/var/log/nginx
      - ./mssp-deploy/nginx/conf/site.template:/etc/nginx/conf.d/site.template
      - ./mssp-deploy/nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./mssp-deploy/nginx/snippets:/etc/nginx/snippets
      - ./mssp-deploy/nginx/ssl/ssl-cert-snakeoil.key:/etc/ssl/private/ssl-cert-snakeoil.key
      - ./mssp-deploy/nginx/ssl/ssl-cert-snakeoil.pem:/etc/ssl/certs/ssl-cert-snakeoil.pem
      - /var/www/html/mssp:/var/www/html/mssp
      - /var/www/html/mssp-admin:/var/www/html/mssp-admin
    command:
      - /bin/sh
      - -c
      - "envsubst '$${NGINX_API_HOST}' < /etc/nginx/conf.d/site.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
    depends_on:
      - mssp
#      - flask-socketio

  redis:
      image: redis:latest
      container_name: redis
      restart: always
      ports:
        - 5006:6379
      networks:
        - mssp-net
      volumes:
        - ./mssp-deploy/redis/conf:/usr/local/etc/redis/conf:rw
        - ./log/redis/log:/var/log/redis:rw
      command:
        - /bin/bash
        - -c
        - |
          redis-server /usr/local/etc/redis/conf/redis.conf
      depends_on:
        - mssp-database

  mssp:
    build: .
    image: mssp:v1
    restart: always
    working_dir: /home/mssp-service/
    networks:
      - mssp-net
    environment:
      - VERSION=v2.0.3.2
      - DB_USER=msspmgr
      - DB_DB=mssp
      - REDDIS_HOST=redis
      - DB_HOST=mssp-database
      - PROD_ENV=production
      - DB_PORT=3306
      - TZ=Asia/Taipei
    depends_on:
      - mssp-database
#      - flask-socketio
    links:
      - mssp-database
#      - flask-socketio:socket
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://mssp:5007" ]
      interval: 5s
      timeout: 2s
      retries: 15
    ports:
      - "5007:8088"
    volumes:
      - .:/home/mssp-service
      - ./migrations:/home/mssp-service/migrations
    command:
      - /bin/bash
      - -c
      - |
        ./wait-for-it.sh -t 60 mssp-database:3306 -- ./main.sh


#  flask-socketio:
#    build: ./websocket/flask
#    restart: always
#    volumes:
#      - ./websocket/flask:/app
#      - "/var/log/billows:/var/log/billows"
#      - /etc/localtime:/etc/localtime:ro
#    networks:
#      - mssp-net
#    ports:
#      - 8081:8081
#  mssp-migration:
#    image: mssp:v1
#    working_dir: /home/mssp-service/
#    command:
#      - /bin/bash
#      - -c
#      - |
#        ./wait-for-it.sh -t 60 mssp-database:3306
#        ./wait-for-it.sh -t 60 mssp-database:3306
#        flask db init
#        flask db migrate -m "INITIABLE"
#        flask db upgrade
#        python3 mssp-deploy/initdata.py
#    networks:
#      - mssp-net
#    restart: on-failure
#    environment:
#      - DB_USER=msspmgr
#      - DB_DB=mssp
#      - REDDIS_HOST=redis
#      - DB_HOST=mssp-database
#      - DB_PORT=3306
#    links:
#      - mssp-database
#    depends_on:
#      - mssp
#      - mssp-database
#    volumes:
#      - ./migrations:/home/mssp-service/migrations




networks:
  mssp-net:
    driver: bridge


    
