2023-04-07 09:13:45 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-07 09:56:11 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-07 10:11:36 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-07 10:13:22 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-07 10:35:17 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-07 10:37:25 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-07 10:39:59 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-07 11:15:35 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-07 11:21:55 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-07 11:21:56 - app.auth.controller.login_controller - ERROR - Token is missing the "iss" claim
Traceback (most recent call last):
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/controller/login_controller.py", line 85, in post
    res = authenticate(**req)
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 139, in authenticate
    raise e
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 135, in authenticate
    add_token_to_db(access_token, "identity")
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 62, in add_token_to_db
    decoded_token = decode_token(encoded_token)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/flask_jwt_extended/utils.py", line 108, in decode_token
    return decode_jwt(
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/flask_jwt_extended/tokens.py", line 139, in decode_jwt
    data = jwt.decode(encoded_token, secret, algorithms=algorithms, audience=audience,
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/jwt/api_jwt.py", line 104, in decode
    self._validate_claims(payload, merged_options, **kwargs)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/jwt/api_jwt.py", line 137, in _validate_claims
    self._validate_iss(payload, issuer)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/jwt/api_jwt.py", line 211, in _validate_iss
    raise MissingRequiredClaimError('iss')
jwt.exceptions.MissingRequiredClaimError: Token is missing the "iss" claim
2023-04-07 11:22:23 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-07 11:25:23 - app.auth.controller.user_controller - INFO - [Resource] <Users> starts to fetch all data
2023-04-07 11:38:21 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-07 11:38:22 - app.auth.controller.login_controller - ERROR - (pymysql.err.ProgrammingError) (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \'<User 1>: "\'2076fa80-e2ab-37e0-b9dc-1ff122fffa2b\'"} \n LIMIT 1\' at line 3')
[SQL: SELECT users.id AS users_id, users.uid AS users_uid, users.company_id AS users_company_id, users.name AS users_name, users.nickname AS users_nickname, users.phone AS users_phone, users.password AS users_password, users.email AS users_email, users.is_admin AS users_is_admin, users.is_delete AS users_is_delete, users.status AS users_status, users.roles_id AS users_roles_id, users.create_at AS users_create_at, users.update_at AS users_update_at 
FROM users 
WHERE users.uid = %(uid_1)s 
 LIMIT %(param_1)s]
[parameters: {'uid_1': {<User 1>: '2076fa80-e2ab-37e0-b9dc-1ff122fffa2b'}, 'param_1': 1}]
(Background on this error at: https://sqlalche.me/e/14/f405)
Traceback (most recent call last):
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/sqlalchemy/engine/base.py", line 1819, in _execute_context
    self.dialect.do_execute(
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
    cursor.execute(statement, parameters)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/cursors.py", line 148, in execute
    result = self._query(query)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/cursors.py", line 310, in _query
    conn.query(q)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/connections.py", line 548, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/connections.py", line 775, in _read_query_result
    result.read()
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/connections.py", line 1156, in read
    first_packet = self.connection._read_packet()
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/connections.py", line 725, in _read_packet
    packet.raise_for_error()
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \'<User 1>: "\'2076fa80-e2ab-37e0-b9dc-1ff122fffa2b\'"} \n LIMIT 1\' at line 3')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/controller/login_controller.py", line 85, in post
    res = authenticate(**req)
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 138, in authenticate
    raise e
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 132, in authenticate
    access_token = create_access_token(identity={user: user.uid}, fresh=True)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/flask_jwt_extended/utils.py", line 172, in create_access_token
    return jwt_manager._create_access_token(identity, fresh, expires_delta, user_claims,
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/flask_jwt_extended/jwt_manager.py", line 506, in _create_access_token
    user_claims = self._user_claims_callback(identity)
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/controller/login_controller.py", line 26, in add_claims_to_access_token
    user_auth = get_user_auth_by_identity(identity)
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 49, in get_user_auth_by_identity
    user = user_dao.get_by_uid(user_identity)
  File "/Users/eason/Desktop/flask-kong-sample/common/dao/base_dao.py", line 86, in get_by_uid
    return self._model.query.filter_by(uid=_uid).first()
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/sqlalchemy/orm/query.py", line 2819, in first
    return self.limit(1)._iter().first()
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/sqlalchemy/orm/query.py", line 2903, in _iter
    result = self.session.execute(
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/sqlalchemy/orm/session.py", line 1712, in execute
    result = conn._execute_20(statement, params or {}, execution_options)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/sqlalchemy/engine/base.py", line 1631, in _execute_20
    return meth(self, args_10style, kwargs_10style, execution_options)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
    return connection._execute_clauseelement(
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/sqlalchemy/engine/base.py", line 1498, in _execute_clauseelement
    ret = self._execute_context(
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/sqlalchemy/engine/base.py", line 1862, in _execute_context
    self._handle_dbapi_exception(
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/sqlalchemy/engine/base.py", line 2043, in _handle_dbapi_exception
    util.raise_(
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/sqlalchemy/util/compat.py", line 208, in raise_
    raise exception
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/sqlalchemy/engine/base.py", line 1819, in _execute_context
    self.dialect.do_execute(
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
    cursor.execute(statement, parameters)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/cursors.py", line 148, in execute
    result = self._query(query)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/cursors.py", line 310, in _query
    conn.query(q)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/connections.py", line 548, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/connections.py", line 775, in _read_query_result
    result.read()
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/connections.py", line 1156, in read
    first_packet = self.connection._read_packet()
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/connections.py", line 725, in _read_packet
    packet.raise_for_error()
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.ProgrammingError: (pymysql.err.ProgrammingError) (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \'<User 1>: "\'2076fa80-e2ab-37e0-b9dc-1ff122fffa2b\'"} \n LIMIT 1\' at line 3')
[SQL: SELECT users.id AS users_id, users.uid AS users_uid, users.company_id AS users_company_id, users.name AS users_name, users.nickname AS users_nickname, users.phone AS users_phone, users.password AS users_password, users.email AS users_email, users.is_admin AS users_is_admin, users.is_delete AS users_is_delete, users.status AS users_status, users.roles_id AS users_roles_id, users.create_at AS users_create_at, users.update_at AS users_update_at 
FROM users 
WHERE users.uid = %(uid_1)s 
 LIMIT %(param_1)s]
[parameters: {'uid_1': {<User 1>: '2076fa80-e2ab-37e0-b9dc-1ff122fffa2b'}, 'param_1': 1}]
(Background on this error at: https://sqlalche.me/e/14/f405)
2023-04-07 11:38:40 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-07 11:38:41 - app.auth.controller.login_controller - ERROR - (pymysql.err.ProgrammingError) (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \'\'user\': "\'2076fa80-e2ab-37e0-b9dc-1ff122fffa2b\'"} \n LIMIT 1\' at line 3')
[SQL: SELECT users.id AS users_id, users.uid AS users_uid, users.company_id AS users_company_id, users.name AS users_name, users.nickname AS users_nickname, users.phone AS users_phone, users.password AS users_password, users.email AS users_email, users.is_admin AS users_is_admin, users.is_delete AS users_is_delete, users.status AS users_status, users.roles_id AS users_roles_id, users.create_at AS users_create_at, users.update_at AS users_update_at 
FROM users 
WHERE users.uid = %(uid_1)s 
 LIMIT %(param_1)s]
[parameters: {'uid_1': {'user': '2076fa80-e2ab-37e0-b9dc-1ff122fffa2b'}, 'param_1': 1}]
(Background on this error at: https://sqlalche.me/e/14/f405)
Traceback (most recent call last):
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/sqlalchemy/engine/base.py", line 1819, in _execute_context
    self.dialect.do_execute(
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
    cursor.execute(statement, parameters)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/cursors.py", line 148, in execute
    result = self._query(query)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/cursors.py", line 310, in _query
    conn.query(q)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/connections.py", line 548, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/connections.py", line 775, in _read_query_result
    result.read()
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/connections.py", line 1156, in read
    first_packet = self.connection._read_packet()
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/connections.py", line 725, in _read_packet
    packet.raise_for_error()
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.ProgrammingError: (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \'\'user\': "\'2076fa80-e2ab-37e0-b9dc-1ff122fffa2b\'"} \n LIMIT 1\' at line 3')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/controller/login_controller.py", line 85, in post
    res = authenticate(**req)
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 138, in authenticate
    raise e
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 132, in authenticate
    access_token = create_access_token(identity={"user": user.uid}, fresh=True)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/flask_jwt_extended/utils.py", line 172, in create_access_token
    return jwt_manager._create_access_token(identity, fresh, expires_delta, user_claims,
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/flask_jwt_extended/jwt_manager.py", line 506, in _create_access_token
    user_claims = self._user_claims_callback(identity)
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/controller/login_controller.py", line 26, in add_claims_to_access_token
    user_auth = get_user_auth_by_identity(identity)
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 49, in get_user_auth_by_identity
    user = user_dao.get_by_uid(user_identity)
  File "/Users/eason/Desktop/flask-kong-sample/common/dao/base_dao.py", line 86, in get_by_uid
    return self._model.query.filter_by(uid=_uid).first()
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/sqlalchemy/orm/query.py", line 2819, in first
    return self.limit(1)._iter().first()
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/sqlalchemy/orm/query.py", line 2903, in _iter
    result = self.session.execute(
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/sqlalchemy/orm/session.py", line 1712, in execute
    result = conn._execute_20(statement, params or {}, execution_options)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/sqlalchemy/engine/base.py", line 1631, in _execute_20
    return meth(self, args_10style, kwargs_10style, execution_options)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/sqlalchemy/sql/elements.py", line 325, in _execute_on_connection
    return connection._execute_clauseelement(
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/sqlalchemy/engine/base.py", line 1498, in _execute_clauseelement
    ret = self._execute_context(
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/sqlalchemy/engine/base.py", line 1862, in _execute_context
    self._handle_dbapi_exception(
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/sqlalchemy/engine/base.py", line 2043, in _handle_dbapi_exception
    util.raise_(
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/sqlalchemy/util/compat.py", line 208, in raise_
    raise exception
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/sqlalchemy/engine/base.py", line 1819, in _execute_context
    self.dialect.do_execute(
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/sqlalchemy/engine/default.py", line 732, in do_execute
    cursor.execute(statement, parameters)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/cursors.py", line 148, in execute
    result = self._query(query)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/cursors.py", line 310, in _query
    conn.query(q)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/connections.py", line 548, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/connections.py", line 775, in _read_query_result
    result.read()
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/connections.py", line 1156, in read
    first_packet = self.connection._read_packet()
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/connections.py", line 725, in _read_packet
    packet.raise_for_error()
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/protocol.py", line 221, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/pymysql/err.py", line 143, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.ProgrammingError: (pymysql.err.ProgrammingError) (1064, 'You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \'\'user\': "\'2076fa80-e2ab-37e0-b9dc-1ff122fffa2b\'"} \n LIMIT 1\' at line 3')
[SQL: SELECT users.id AS users_id, users.uid AS users_uid, users.company_id AS users_company_id, users.name AS users_name, users.nickname AS users_nickname, users.phone AS users_phone, users.password AS users_password, users.email AS users_email, users.is_admin AS users_is_admin, users.is_delete AS users_is_delete, users.status AS users_status, users.roles_id AS users_roles_id, users.create_at AS users_create_at, users.update_at AS users_update_at 
FROM users 
WHERE users.uid = %(uid_1)s 
 LIMIT %(param_1)s]
[parameters: {'uid_1': {'user': '2076fa80-e2ab-37e0-b9dc-1ff122fffa2b'}, 'param_1': 1}]
(Background on this error at: https://sqlalche.me/e/14/f405)
2023-04-07 12:00:44 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-07 12:02:40 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-07 12:02:41 - app.auth.controller.login_controller - ERROR - create_access_token() got an unexpected keyword argument 'iss'
Traceback (most recent call last):
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/controller/login_controller.py", line 85, in post
    res = authenticate(**req)
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 139, in authenticate
    raise e
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 133, in authenticate
    access_token = create_access_token(identity=user.uid, fresh=True, iss="mssp")
TypeError: create_access_token() got an unexpected keyword argument 'iss'
2023-04-07 12:17:00 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-10 09:49:56 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-10 10:09:23 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-10 10:09:24 - app.auth.controller.login_controller - ERROR - {'user_identity': ['Field may not be null.']}
Traceback (most recent call last):
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/controller/login_controller.py", line 87, in post
    res = authenticate(**req)
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 140, in authenticate
    raise e
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 136, in authenticate
    add_token_to_db(access_token, "identity")
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 73, in add_token_to_db
    login_token = login_token_schema.load(data)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/marshmallow_sqlalchemy/load_instance_mixin.py", line 96, in load
    return super().load(data, **kwargs)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/marshmallow/schema.py", line 719, in load
    return self._do_load(
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/marshmallow/schema.py", line 904, in _do_load
    raise exc
marshmallow.exceptions.ValidationError: {'user_identity': ['Field may not be null.']}
2023-04-10 10:46:35 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-10 10:46:37 - app.auth.controller.login_controller - ERROR - type object 'datetime.datetime' has no attribute 'datetime'
Traceback (most recent call last):
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/controller/login_controller.py", line 88, in post
    res = authenticate(**req)
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 173, in authenticate
    raise e
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 138, in authenticate
    dt = datetime.datetime.now(timezone.utc)
AttributeError: type object 'datetime.datetime' has no attribute 'datetime'
2023-04-10 10:47:12 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-10 10:47:14 - app.auth.controller.login_controller - ERROR - type object 'datetime.datetime' has no attribute 'datetime'
Traceback (most recent call last):
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/controller/login_controller.py", line 88, in post
    res = authenticate(**req)
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 171, in authenticate
    raise e
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 136, in authenticate
    dt = datetime.datetime.now(timezone.utc)
AttributeError: type object 'datetime.datetime' has no attribute 'datetime'
2023-04-10 10:47:29 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-10 10:47:31 - app.auth.controller.login_controller - ERROR - 'key'
Traceback (most recent call last):
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/controller/login_controller.py", line 88, in post
    res = authenticate(**req)
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 172, in authenticate
    raise e
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 154, in authenticate
    "iss": r.json()["key"],
KeyError: 'key'
2023-04-10 10:48:32 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-10 10:48:34 - app.auth.controller.login_controller - ERROR - 'key'
Traceback (most recent call last):
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/controller/login_controller.py", line 88, in post
    res = authenticate(**req)
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 172, in authenticate
    raise e
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 154, in authenticate
    "iss": r.json()["key"],
KeyError: 'key'
2023-04-10 10:50:32 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-10 10:50:34 - app.auth.controller.login_controller - ERROR - 'dict' object has no attribute 'uid'
Traceback (most recent call last):
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/controller/login_controller.py", line 88, in post
    res = authenticate(**req)
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 172, in authenticate
    raise e
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 158, in authenticate
    "identity": user.uid,
AttributeError: 'dict' object has no attribute 'uid'
2023-04-10 10:51:19 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-10 10:53:03 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-10 10:53:05 - app.auth.controller.login_controller - ERROR - module 'datetime' has no attribute 'fromtimestamp'
Traceback (most recent call last):
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/controller/login_controller.py", line 88, in post
    res = authenticate(**req)
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 172, in authenticate
    raise e
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 168, in authenticate
    add_token_to_db(access_token, "identity")
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 69, in add_token_to_db
    expires = _epoch_utc_to_datetime(decoded_token["exp"])
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 29, in _epoch_utc_to_datetime
    return datetime.fromtimestamp(epoch_utc)
AttributeError: module 'datetime' has no attribute 'fromtimestamp'
2023-04-10 10:54:59 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-10 10:55:00 - app.auth.controller.login_controller - ERROR - type object 'datetime.datetime' has no attribute 'datetime'
Traceback (most recent call last):
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/controller/login_controller.py", line 88, in post
    res = authenticate(**req)
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 172, in authenticate
    raise e
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 137, in authenticate
    dt = datetime.datetime.now(timezone.utc)
AttributeError: type object 'datetime.datetime' has no attribute 'datetime'
2023-04-10 10:55:27 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-10 11:00:47 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-10 11:04:51 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-10 11:06:07 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-10 11:08:14 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-10 11:09:33 - app.auth.controller.role_controller - INFO - [Resource] <PermissionsMenu> starts to fetch the menu
2023-04-10 11:09:50 - app.auth.controller.user_controller - INFO - [Resource] <Users> starts to fetch all data
2023-04-10 11:50:36 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-10 14:13:44 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-10 14:13:46 - app.auth.controller.login_controller - ERROR - Signature has expired
Traceback (most recent call last):
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/controller/login_controller.py", line 84, in post
    res = authenticate(**req)
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 140, in authenticate
    raise e
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 137, in authenticate
    add_token_to_db(refresh_token, "identity")
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 69, in add_token_to_db
    decoded_token = decode_token(encoded_token)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/flask_jwt_extended/utils.py", line 108, in decode_token
    return decode_jwt(
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/flask_jwt_extended/tokens.py", line 139, in decode_jwt
    data = jwt.decode(encoded_token, secret, algorithms=algorithms, audience=audience,
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/jwt/api_jwt.py", line 104, in decode
    self._validate_claims(payload, merged_options, **kwargs)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/jwt/api_jwt.py", line 134, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/jwt/api_jwt.py", line 175, in _validate_exp
    raise ExpiredSignatureError('Signature has expired')
jwt.exceptions.ExpiredSignatureError: Signature has expired
2023-04-10 14:14:20 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-10 14:14:22 - app.auth.controller.login_controller - ERROR - Signature has expired
Traceback (most recent call last):
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/controller/login_controller.py", line 84, in post
    res = authenticate(**req)
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 140, in authenticate
    raise e
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 137, in authenticate
    add_token_to_db(refresh_token, "identity")
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 69, in add_token_to_db
    decoded_token = decode_token(encoded_token)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/flask_jwt_extended/utils.py", line 108, in decode_token
    return decode_jwt(
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/flask_jwt_extended/tokens.py", line 139, in decode_jwt
    data = jwt.decode(encoded_token, secret, algorithms=algorithms, audience=audience,
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/jwt/api_jwt.py", line 104, in decode
    self._validate_claims(payload, merged_options, **kwargs)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/jwt/api_jwt.py", line 134, in _validate_claims
    self._validate_exp(payload, now, leeway)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/jwt/api_jwt.py", line 175, in _validate_exp
    raise ExpiredSignatureError('Signature has expired')
jwt.exceptions.ExpiredSignatureError: Signature has expired
2023-04-10 14:16:36 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-10 14:18:35 - app.auth.controller.login_controller - INFO - [Resource] <LoginRefresh> starts to refresh user token
2023-04-10 14:18:37 - app.auth.controller.login_controller - ERROR - 'dict' object has no attribute 'name'
Traceback (most recent call last):
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/controller/login_controller.py", line 101, in post
    return return_response(True, refresh_user_token())
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 112, in refresh_user_token
    new_access_token = create_access_jwt_token(user, "access", False)
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 166, in create_access_jwt_token
    kong_jwt_path = kong_jwt_path.format(url=kong_url, username=user_info.name)
AttributeError: 'dict' object has no attribute 'name'
2023-04-10 14:19:32 - app.auth.controller.login_controller - INFO - [Resource] <LoginRefresh> starts to refresh user token
2023-04-10 14:21:30 - app.auth.controller.login_controller - ERROR - 'dict' object has no attribute 'name'
Traceback (most recent call last):
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/controller/login_controller.py", line 101, in post
    return return_response(True, refresh_user_token())
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 112, in refresh_user_token
    new_access_token = create_access_jwt_token(user, "access", False)
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 166, in create_access_jwt_token
    kong_jwt_path = kong_jwt_path.format(url=kong_url, username=user_info.name)
AttributeError: 'dict' object has no attribute 'name'
2023-04-10 14:21:45 - app.auth.controller.login_controller - INFO - [Resource] <LoginRefresh> starts to refresh user token
2023-04-10 14:21:45 - app.auth.controller.login_controller - ERROR - 'User' object is not callable
Traceback (most recent call last):
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/controller/login_controller.py", line 101, in post
    return return_response(True, refresh_user_token())
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 111, in refresh_user_token
    user = user_dao.get_by_uid(current_user)(current_user)
TypeError: 'User' object is not callable
2023-04-10 14:22:05 - app.auth.controller.login_controller - INFO - [Resource] <LoginRefresh> starts to refresh user token
2023-04-10 14:40:58 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-10 14:42:13 - app.auth.controller.login_controller - INFO - [Resource] <LoginRefresh> starts to refresh user token
2023-04-10 14:43:08 - app.auth.controller.user_controller - INFO - [Resource] <Users> starts to fetch all data
2023-04-10 14:59:09 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
2023-04-10 14:59:11 - app.auth.controller.login_controller - ERROR - HTTPConnectionPool(host='localhost', port=8001): Max retries exceeded with url: /consumers/Admin/jwt (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fa1c096d6d0>: Failed to establish a new connection: [Errno 61] Connection refused'))
Traceback (most recent call last):
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/urllib3/connection.py", line 174, in _new_conn
    conn = connection.create_connection(
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/urllib3/util/connection.py", line 95, in create_connection
    raise err
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/urllib3/util/connection.py", line 85, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 61] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/urllib3/connectionpool.py", line 703, in urlopen
    httplib_response = self._make_request(
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/urllib3/connectionpool.py", line 398, in _make_request
    conn.request(method, url, **httplib_request_kw)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/urllib3/connection.py", line 244, in request
    super(HTTPConnection, self).request(method, url, body=body, headers=headers)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/http/client.py", line 1279, in request
    self._send_request(method, url, body, headers, encode_chunked)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/http/client.py", line 1325, in _send_request
    self.endheaders(body, encode_chunked=encode_chunked)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/http/client.py", line 1274, in endheaders
    self._send_output(message_body, encode_chunked=encode_chunked)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/http/client.py", line 1034, in _send_output
    self.send(msg)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/http/client.py", line 974, in send
    self.connect()
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/urllib3/connection.py", line 205, in connect
    conn = self._new_conn()
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/urllib3/connection.py", line 186, in _new_conn
    raise NewConnectionError(
urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPConnection object at 0x7fa1c096d6d0>: Failed to establish a new connection: [Errno 61] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/requests/adapters.py", line 489, in send
    resp = conn.urlopen(
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/urllib3/connectionpool.py", line 787, in urlopen
    retries = retries.increment(
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/urllib3/util/retry.py", line 592, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=8001): Max retries exceeded with url: /consumers/Admin/jwt (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fa1c096d6d0>: Failed to establish a new connection: [Errno 61] Connection refused'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/controller/login_controller.py", line 84, in post
    res = authenticate(**req)
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 135, in authenticate
    raise e
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 129, in authenticate
    access_token = create_access_jwt_token(user, "access", True)
  File "/Users/eason/Desktop/flask-kong-sample/app/auth/service/login_token_service.py", line 161, in create_access_jwt_token
    r = requests.get(kong_jwt_path)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/requests/api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/requests/sessions.py", line 587, in request
    resp = self.send(prep, **send_kwargs)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/requests/sessions.py", line 701, in send
    r = adapter.send(request, **kwargs)
  File "/Users/eason/Desktop/flask-kong-sample/venv/lib/python3.9/site-packages/requests/adapters.py", line 565, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='localhost', port=8001): Max retries exceeded with url: /consumers/Admin/jwt (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fa1c096d6d0>: Failed to establish a new connection: [Errno 61] Connection refused'))
2023-04-10 14:59:11 - app - ERROR - Unhandled Exception: Object of type MaxRetryError is not JSON serializable
2023-04-10 15:00:53 - app.auth.controller.login_controller - INFO - [Resource] <Login> starts to login
